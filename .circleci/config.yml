version: 2.1

defaults: &environment_ansible
  docker:
    - image: python:3.7-alpine3.11
defaults: &environment_aws
  docker:
    - image: amazon/aws-cli

commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy Environment
          command: aws cloudformation delete-stack --stack-name my-stack
          when: on_fail

jobs:
  build_environment:
    <<: *environment_aws
    steps:
      - checkout
      - run: aws cloudformation deploy --template-file template.yml --stack-name my-stack
  deploy_environment:
    <<: *environment_ansible
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["72:74:85:21:95:96:db:d6:2c:ab:a1:b2:72:16:88:0a"]
      - run:
          name: Install Dependencies
          command: |
            apk add --update ansible
      - run:
          name:  run playbook
          command: ansible-playbook -i ansible/inventory ansible/main.yml
  smoketest:
    <<: *environment_aws
    steps:
      - run: apk add --update curl
      - run:
          name: perform CURL Smoke Test
          command: |
            URL="https://blog.udacity.au/"
            if curl -s --head ${URL} # test if blog.udacity. com exists
            then
             return 0
            else
             return 1
            fi
      - destroy_environment



workflows:
  cd:
    jobs:
      - build_environment
      # deploy_environment

      - smoketest